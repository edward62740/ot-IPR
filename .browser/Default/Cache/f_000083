{"html":"\n      <article>\n        <div class=\"header\">\n  \n  <div class=\"headertitle\">\n  <h1 class=\"title\">SPIDRV - SPI Driver<\/h1><\/div>\n<\/div><!--header-->\n<div class=\"contents\">\n<a name=\"details\" id=\"details\"><\/a><h2 class=\"groupheader\">Description<\/h2>\n<p>Serial Peripheral Interface Driver. <\/p>\n<p>The spidrv.c and spidrv.h source files for the SPI driver library are in the emdrv/spidrv folder.<\/p>\n<ul>\n<li><a href=\"#spidrv-intro\" class=\"el\">Introduction<\/a> <\/li>\n<li><a href=\"#spidrv-conf\" class=\"el\">Configuration Options<\/a> <\/li>\n<li><a href=\"#spidrv-api\" class=\"el\">The API<\/a> <\/li>\n<li><a href=\"#spidrv-example\" class=\"el\">Example<\/a><\/li>\n<\/ul>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"spidrv-intro\"><\/a>\nIntroduction<\/h1>\n<p>The SPI driver supports the SPI capabilities of EFM32/EZR32/EFR32 USARTs. The driver is fully reentrant, supports several driver instances, and does not buffer or queue data. Both synchronous and asynchronous transfer functions are included for both master and slave SPI mode. Synchronous transfer functions are blocking and do not return before the transfer is complete. Asynchronous transfer functions report transfer completion with callback functions. Transfers are handled using DMA.<\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>Transfer completion callback functions are called from within the DMA interrupt handler with interrupts disabled.<\/dd><\/dl>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"spidrv-conf\"><\/a>\nConfiguration Options<\/h1>\n<p>Some properties of the SPIDRV driver are compile-time configurable. These properties are stored in a file named spidrv_config.h. A template for this file, containing default values, is in the emdrv/config folder. Currently the configuration options are as follows: <\/p><ul>\n<li>Inclusion of slave API transfer functions.<\/li>\n<\/ul>\n<p>To configure SPIDRV, provide a custom configuration file. This is a sample spidrv_config.h file: <\/p><pre class=\"fragment\">#ifndef __SILICON_LABS_SPIDRV_CONFIG_H__\n#define __SILICON_LABS_SPIDRV_CONFIG_H__\n\n// SPIDRV configuration option. Use this define to include the\n// slave part of the SPIDRV API.\n#define EMDRV_SPIDRV_INCLUDE_SLAVE\n\n#endif<\/pre><p>The properties of each SPI driver instance are set at run-time using the <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init\" class=\"el\" target=\"_blank\">SPIDRV_Init<\/a> data structure input parameter to the <a href=\"#gae1bf2b297eca13e7e46cbbcb66202239\" class=\"el\">SPIDRV_Init()<\/a> function.<\/p>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"spidrv-api\"><\/a>\nThe API<\/h1>\n<p>This section contains brief descriptions of the API functions. For detailed information on input and output parameters and return values, click on the hyperlinked function names. Most functions return an error code, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> is returned on success, see ecode.h and spidrv.h for other error codes.<\/p>\n<p>The application code must include <em>spidrv.h<\/em>.<\/p>\n<p><a href=\"#gae1bf2b297eca13e7e46cbbcb66202239\" class=\"el\">SPIDRV_Init()<\/a>, <a href=\"#ga1bebced0f8f5b3a3ac582916e4b13460\" class=\"el\">SPIDRV_DeInit()<\/a> <br>\n These functions initialize or deinitializes the SPIDRV driver. Typically,  SPIDRV_Init()  is called once in the startup code.<\/p>\n<p><a href=\"#ga7d440db45246649580c6c5b08eb332da\" class=\"el\">SPIDRV_GetTransferStatus()<\/a> <br>\n Query the status of a transfer. Reports number of items (frames) transmitted and remaining.<\/p>\n<p><a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> <br>\n Stop an ongoing transfer.<\/p>\n<p><a href=\"#ga3e6e2f999eb2ef0fd16df41339e6dc84\" class=\"el\">SPIDRV_SetBitrate()<\/a>, <a href=\"#ga9b3613b7cfbd6f3584a957c757934841\" class=\"el\">SPIDRV_GetBitrate()<\/a> <br>\n Set or query the SPI bus bitrate.<\/p>\n<p><a href=\"#ga54ce984fad9b30b3e8e860b6ada5b77a\" class=\"el\">SPIDRV_SetFramelength()<\/a>, <a href=\"#ga08075cb727e683585eeace6de71fcc80\" class=\"el\">SPIDRV_GetFramelength()<\/a> <br>\n Set or query SPI the bus frame length.<\/p>\n<p><a href=\"#ga791215fe6c21c8630d8acd45dd02491c\" class=\"el\" title=\"Start an SPI master receive transfer.\">SPIDRV_MReceive()<\/a>, <a href=\"#gace57de2fe713e7eed216c8f4d00e19b8\" class=\"el\" title=\"Start an SPI master blocking receive transfer.\">SPIDRV_MReceiveB()<\/a> <br>\n <a href=\"#ga783d2e10fd457bdb7b214f59238c3deb\" class=\"el\" title=\"Start an SPI master transfer.\">SPIDRV_MTransfer()<\/a>, <a href=\"#gac897032e6a00ff40e476f1f3dadc55ba\" class=\"el\" title=\"Start an SPI master blocking transfer.\">SPIDRV_MTransferB()<\/a>, <a href=\"#gaea943a66137078855a6511a75fb27437\" class=\"el\" title=\"Start an SPI master blocking single item (frame) transfer.\">SPIDRV_MTransferSingleItemB()<\/a> <br>\n <a href=\"#ga29fb3ab707b29dbb8efaad5523e162b3\" class=\"el\" title=\"Start an SPI master transmit transfer.\">SPIDRV_MTransmit()<\/a>, <a href=\"#gaf53f10ccb89d8ae2c5c397db7cb87a9e\" class=\"el\" title=\"Start an SPI master blocking transmit transfer.\">SPIDRV_MTransmitB()<\/a> <br>\n <a href=\"#gaa4a1d07a7cfa1b461231b81ee9bd7208\" class=\"el\" title=\"Start an SPI slave receive transfer.\">SPIDRV_SReceive()<\/a>, <a href=\"#gaacf21de6f56b73897137afe66c8a55fc\" class=\"el\" title=\"Start an SPI slave blocking receive transfer.\">SPIDRV_SReceiveB()<\/a> <br>\n <a href=\"#ga3b0e6cefe8389131f8cda2d3422ca165\" class=\"el\" title=\"Start an SPI slave transfer.\">SPIDRV_STransfer()<\/a>, <a href=\"#ga2117731649ff7375202f3db7c7eaea14\" class=\"el\" title=\"Start an SPI slave blocking transfer.\">SPIDRV_STransferB()<\/a> <br>\n <a href=\"#gab17e267c072c9fa5424ac0dbb6d162b4\" class=\"el\" title=\"Start an SPI slave transmit transfer.\">SPIDRV_STransmit()<\/a>, <a href=\"#ga950e481559e49f805c4c65701f272df5\" class=\"el\" title=\"Start an SPI slave blocking transmit transfer.\">SPIDRV_STransmitB()<\/a> <br>\n SPI transfer functions for SPI masters have an uppercase M in their name, the slave counterparts have an S.<\/p>\n<p>As previously mentioned, transfer functions are synchronous and asynchronous. The synchronous versions have an uppercase B (for Blocking) at the end of their function name.<\/p>\n<p><em>Transmit<\/em> functions discard received data, <em>receive<\/em> functions transmit a fixed data pattern set when the driver is initialized (<a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init#a207c6c1d6fe3547cfa3bcac9deb91c94\" class=\"el\" target=\"_blank\">SPIDRV_Init::dummyTxValue<\/a>). <em>Transfer<\/em> functions both receive and transmit data.<\/p>\n<p>All slave transfer functions have a millisecond timeout parameter. Use 0 for no (infinite) timeout.<\/p>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"spidrv-example\"><\/a>\nExample<\/h1>\n<pre class=\"fragment\">#include \"spidrv.h\"\n\nSPIDRV_HandleData_t handleData;\nSPIDRV_Handle_t handle = &amp;handleData;\n\nvoid TransferComplete(SPIDRV_Handle_t handle,\n                      Ecode_t transferStatus,\n                      int itemsTransferred)\n{\n  if (transferStatus == ECODE_EMDRV_SPIDRV_OK) {\n   // Success !\n  }\n}\n\nint main(void)\n{\n  uint8_t buffer[10];\n  SPIDRV_Init_t initData = SPIDRV_MASTER_USART2;\n\n  // Initialize an SPI driver instance.\n  SPIDRV_Init(handle, &amp;initData);\n\n  // Transmit data using a blocking transmit function.\n  SPIDRV_MTransmitB(handle, buffer, 10);\n\n  // Transmit data using a callback to catch transfer completion.\n  SPIDRV_MTransmit(handle, buffer, 10, TransferComplete);\n}<\/pre> <table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"groups\"><\/a>\nModules<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes\" class=\"\" target=\"_blank\">Error Codes<\/a><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-init-structs\" class=\"\" target=\"_blank\">Init Configuration Data<\/a><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"nested-classes\"><\/a>\nData Structures<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">struct &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init\" class=\"el\" target=\"_blank\">SPIDRV_Init<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">An SPI driver instance initialization structure.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">struct &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-handle-data\" class=\"el\" target=\"_blank\">SPIDRV_HandleData<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">An SPI driver instance handle data structure.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"><\/a>\nFunctions<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Abort an ongoing SPI transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga1bebced0f8f5b3a3ac582916e4b13460\" class=\"el\">SPIDRV_DeInit<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Deinitialize an SPI driver instance.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga9b3613b7cfbd6f3584a957c757934841\" class=\"el\">SPIDRV_GetBitrate<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, uint32_t *bitRate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get current SPI bus bitrate.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga08075cb727e683585eeace6de71fcc80\" class=\"el\">SPIDRV_GetFramelength<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, uint32_t *frameLength)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get current SPI framelength.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga7d440db45246649580c6c5b08eb332da\" class=\"el\">SPIDRV_GetTransferStatus<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, int *itemsTransferred, int *itemsRemaining)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get the status of an SPI transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gae1bf2b297eca13e7e46cbbcb66202239\" class=\"el\">SPIDRV_Init<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, SPIDRV_Init_t *initData)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Initialize an SPI driver instance.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga791215fe6c21c8630d8acd45dd02491c\" class=\"el\">SPIDRV_MReceive<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, void *buffer, int count, <a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a> callback)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master receive transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gace57de2fe713e7eed216c8f4d00e19b8\" class=\"el\">SPIDRV_MReceiveB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, void *buffer, int count)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master blocking receive transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga783d2e10fd457bdb7b214f59238c3deb\" class=\"el\">SPIDRV_MTransfer<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *txBuffer, void *rxBuffer, int count, <a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a> callback)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gac897032e6a00ff40e476f1f3dadc55ba\" class=\"el\">SPIDRV_MTransferB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *txBuffer, void *rxBuffer, int count)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master blocking transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaea943a66137078855a6511a75fb27437\" class=\"el\">SPIDRV_MTransferSingleItemB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, uint32_t txValue, void *rxValue)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master blocking single item (frame) transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga29fb3ab707b29dbb8efaad5523e162b3\" class=\"el\">SPIDRV_MTransmit<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *buffer, int count, <a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a> callback)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master transmit transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaf53f10ccb89d8ae2c5c397db7cb87a9e\" class=\"el\">SPIDRV_MTransmitB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *buffer, int count)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI master blocking transmit transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga3e6e2f999eb2ef0fd16df41339e6dc84\" class=\"el\">SPIDRV_SetBitrate<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, uint32_t bitRate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set SPI bus bitrate.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga54ce984fad9b30b3e8e860b6ada5b77a\" class=\"el\">SPIDRV_SetFramelength<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, uint32_t frameLength)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set SPI framelength.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa4a1d07a7cfa1b461231b81ee9bd7208\" class=\"el\">SPIDRV_SReceive<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, void *buffer, int count, <a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a> callback, int timeoutMs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI slave receive transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaacf21de6f56b73897137afe66c8a55fc\" class=\"el\">SPIDRV_SReceiveB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, void *buffer, int count, int timeoutMs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI slave blocking receive transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga3b0e6cefe8389131f8cda2d3422ca165\" class=\"el\">SPIDRV_STransfer<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *txBuffer, void *rxBuffer, int count, <a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a> callback, int timeoutMs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI slave transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga2117731649ff7375202f3db7c7eaea14\" class=\"el\">SPIDRV_STransferB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *txBuffer, void *rxBuffer, int count, int timeoutMs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI slave blocking transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gab17e267c072c9fa5424ac0dbb6d162b4\" class=\"el\">SPIDRV_STransmit<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *buffer, int count, <a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a> callback, int timeoutMs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI slave transmit transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga950e481559e49f805c4c65701f272df5\" class=\"el\">SPIDRV_STransmitB<\/a> (<a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a> handle, const void *buffer, int count, int timeoutMs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Start an SPI slave blocking transmit transfer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"typedef-members\"><\/a>\nTypedefs<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">typedef void(*&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>) (struct <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-handle-data\" class=\"el\" target=\"_blank\">SPIDRV_HandleData<\/a> *handle, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> transferStatus, int itemsTransferred)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">SPIDRV transfer completion callback function.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">typedef SPIDRV_HandleData_t *&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">An SPI driver instance handle.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"enum-members\"><\/a>\nEnumerations<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga92f8a1bb98455a277eb9238eb020c9e2\" class=\"el\">SPIDRV_Type_t<\/a> { <br>\n&nbsp;&nbsp;<a href=\"#gga92f8a1bb98455a277eb9238eb020c9e2af6a83e2d1d37a22bc9ba51fd82639ca1\" class=\"el\">spidrvMaster<\/a> = 0, \n<br>\n&nbsp;&nbsp;<a href=\"#gga92f8a1bb98455a277eb9238eb020c9e2a95838f0a3dc0a41cd9f8666007153382\" class=\"el\">spidrvSlave<\/a> = 1\n<br>\n }<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">SPI driver instance type.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga2571cd18e87ebb5f73c7807f2dc481d6\" class=\"el\">SPIDRV_BitOrder_t<\/a> { <br>\n&nbsp;&nbsp;<a href=\"#gga2571cd18e87ebb5f73c7807f2dc481d6ad5e81b8d0ea9e47ce1b0e8e07d7fefcb\" class=\"el\">spidrvBitOrderLsbFirst<\/a> = 0, \n<br>\n&nbsp;&nbsp;<a href=\"#gga2571cd18e87ebb5f73c7807f2dc481d6a39e35dc40973c0bd86a3bf5773e62ee0\" class=\"el\">spidrvBitOrderMsbFirst<\/a> = 1\n<br>\n }<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">SPI bus bit order.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga13720525a175ccbac25d23f36389c5e7\" class=\"el\">SPIDRV_ClockMode_t<\/a> { <br>\n&nbsp;&nbsp;<a href=\"#gga13720525a175ccbac25d23f36389c5e7a27310f7f1b98461cf85ba709cd0fe41a\" class=\"el\">spidrvClockMode0<\/a> = 0, \n<br>\n&nbsp;&nbsp;<a href=\"#gga13720525a175ccbac25d23f36389c5e7ab6543e2ed572e0f6355e400e3180cd72\" class=\"el\">spidrvClockMode1<\/a> = 1, \n<br>\n&nbsp;&nbsp;<a href=\"#gga13720525a175ccbac25d23f36389c5e7a8703b40ce81f04a02bd6d373d614629d\" class=\"el\">spidrvClockMode2<\/a> = 2, \n<br>\n&nbsp;&nbsp;<a href=\"#gga13720525a175ccbac25d23f36389c5e7a645525db817610d91a47d87068c3bcf9\" class=\"el\">spidrvClockMode3<\/a> = 3\n<br>\n }<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">SPI clock mode (clock polarity and phase).  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga1b2445b05fd2c5a499068e7cd6642380\" class=\"el\">SPIDRV_CsControl_t<\/a> { <br>\n&nbsp;&nbsp;<a href=\"#gga1b2445b05fd2c5a499068e7cd6642380a904c7b0aced12d590e14d068c9b3f7a1\" class=\"el\">spidrvCsControlAuto<\/a> = 0, \n<br>\n&nbsp;&nbsp;<a href=\"#gga1b2445b05fd2c5a499068e7cd6642380a287d46881f1c2a94361a865fe75d9fa0\" class=\"el\">spidrvCsControlApplication<\/a> = 1\n<br>\n }<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">SPI master chip select (CS) control scheme.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga5886a33d407438f827ca1b47a8bb6be0\" class=\"el\">SPIDRV_SlaveStart_t<\/a> { <br>\n&nbsp;&nbsp;<a href=\"#gga5886a33d407438f827ca1b47a8bb6be0a5cd731dca4929ff3ec6ad62006b7bca8\" class=\"el\">spidrvSlaveStartImmediate<\/a> = 0, \n<br>\n&nbsp;&nbsp;<a href=\"#gga5886a33d407438f827ca1b47a8bb6be0ad616a0af127eb0682af8f60e9954289a\" class=\"el\">spidrvSlaveStartDelayed<\/a> = 1\n<br>\n }<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">SPI slave transfer start scheme.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table>\n<h2 class=\"groupheader\">Function Documentation<\/h2>\n<a id=\"ga071d128b28b8acff08396fb090b8025a\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga071d128b28b8acff08396fb090b8025a\">◆&nbsp;<\/a><\/span>SPIDRV_AbortTransfer()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_AbortTransfer <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Abort an ongoing SPI transfer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga5895306e19420d805870b7c0c9fa2ada\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_IDLE<\/a> if SPI is idle. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga1bebced0f8f5b3a3ac582916e4b13460\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga1bebced0f8f5b3a3ac582916e4b13460\">◆&nbsp;<\/a><\/span>SPIDRV_DeInit()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_DeInit <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Deinitialize an SPI driver instance. <\/p>\n<dl class=\"section warning\"><dt>Warning<\/dt><dd>This function should only be called with an initialized spidrv instance handle.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga9b3613b7cfbd6f3584a957c757934841\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga9b3613b7cfbd6f3584a957c757934841\">◆&nbsp;<\/a><\/span>SPIDRV_GetBitrate()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_GetBitrate <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>bitRate&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get current SPI bus bitrate. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>bitRate<\/code><\/td><td>Current SPI bus bitrate.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga08075cb727e683585eeace6de71fcc80\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga08075cb727e683585eeace6de71fcc80\">◆&nbsp;<\/a><\/span>SPIDRV_GetFramelength()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_GetFramelength <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>frameLength&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get current SPI framelength. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>frameLength<\/code><\/td><td>Current SPI bus framelength.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga7d440db45246649580c6c5b08eb332da\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga7d440db45246649580c6c5b08eb332da\">◆&nbsp;<\/a><\/span>SPIDRV_GetTransferStatus()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_GetTransferStatus <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int *&nbsp;<\/td>\n          <td class=\"paramname\"><code>itemsTransferred, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int *&nbsp;<\/td>\n          <td class=\"paramname\"><code>itemsRemaining&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get the status of an SPI transfer. <\/p>\n<p>Returns status of an ongoing transfer. If no transfer is in progress, the status of the last transfer is reported.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>itemsTransferred<\/code><\/td><td>Number of items (frames) transferred.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>itemsRemaining<\/code><\/td><td>Number of items (frames) remaining.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gae1bf2b297eca13e7e46cbbcb66202239\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gae1bf2b297eca13e7e46cbbcb66202239\">◆&nbsp;<\/a><\/span>SPIDRV_Init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init\" class=\"el\" target=\"_blank\">SPIDRV_Init<\/a> <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">SPIDRV_Init_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>initData&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Initialize an SPI driver instance. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle; refer to <a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>initData<\/code><\/td><td>Pointer to an initialization data structure; refer to <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init\" class=\"el\" target=\"_blank\">SPIDRV_Init<\/a>.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga791215fe6c21c8630d8acd45dd02491c\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga791215fe6c21c8630d8acd45dd02491c\">◆&nbsp;<\/a><\/span>SPIDRV_MReceive()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MReceive <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>callback&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master receive transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The MOSI wire will transmit <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init#a207c6c1d6fe3547cfa3bcac9deb91c94\" class=\"el\" target=\"_blank\">SPIDRV_Init::dummyTxValue<\/a>.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>callback<\/code><\/td><td>Transfer completion callback.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gace57de2fe713e7eed216c8f4d00e19b8\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gace57de2fe713e7eed216c8f4d00e19b8\">◆&nbsp;<\/a><\/span>SPIDRV_MReceiveB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MReceiveB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master blocking receive transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The MOSI wire will transmit <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init#a207c6c1d6fe3547cfa3bcac9deb91c94\" class=\"el\" target=\"_blank\">SPIDRV_Init::dummyTxValue<\/a>. <br>\n This function is blocking and returns when the transfer is complete or when <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> is called.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga783d2e10fd457bdb7b214f59238c3deb\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga783d2e10fd457bdb7b214f59238c3deb\">◆&nbsp;<\/a><\/span>SPIDRV_MTransfer()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MTransfer <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>txBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>rxBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>callback&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master transfer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>txBuffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>rxBuffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>callback<\/code><\/td><td>Transfer completion callback.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gac897032e6a00ff40e476f1f3dadc55ba\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gac897032e6a00ff40e476f1f3dadc55ba\">◆&nbsp;<\/a><\/span>SPIDRV_MTransferB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MTransferB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>txBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>rxBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master blocking transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>This function is blocking and returns when the transfer is complete or when <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> is called.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>txBuffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>rxBuffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaea943a66137078855a6511a75fb27437\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaea943a66137078855a6511a75fb27437\">◆&nbsp;<\/a><\/span>SPIDRV_MTransferSingleItemB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MTransferSingleItemB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>txValue, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>rxValue&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master blocking single item (frame) transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>This function is blocking and returns when the transfer is complete or when <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> is called.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>txValue<\/code><\/td><td>Value to transmit.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>rxValue<\/code><\/td><td>Value received.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga29fb3ab707b29dbb8efaad5523e162b3\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga29fb3ab707b29dbb8efaad5523e162b3\">◆&nbsp;<\/a><\/span>SPIDRV_MTransmit()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MTransmit <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>callback&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master transmit transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The data received on the MISO wire is discarded.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>callback<\/code><\/td><td>Transfer completion callback.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaf53f10ccb89d8ae2c5c397db7cb87a9e\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaf53f10ccb89d8ae2c5c397db7cb87a9e\">◆&nbsp;<\/a><\/span>SPIDRV_MTransmitB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_MTransmitB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI master blocking transmit transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The data received on the MISO wire is discarded. <br>\n This function is blocking and returns when the transfer is complete.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga3e6e2f999eb2ef0fd16df41339e6dc84\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga3e6e2f999eb2ef0fd16df41339e6dc84\">◆&nbsp;<\/a><\/span>SPIDRV_SetBitrate()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_SetBitrate <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>bitRate&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set SPI bus bitrate. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>bitRate<\/code><\/td><td>New SPI bus bitrate.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga54ce984fad9b30b3e8e860b6ada5b77a\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga54ce984fad9b30b3e8e860b6ada5b77a\">◆&nbsp;<\/a><\/span>SPIDRV_SetFramelength()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_SetFramelength <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>frameLength&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set SPI framelength. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>frameLength<\/code><\/td><td>New SPI bus framelength.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa4a1d07a7cfa1b461231b81ee9bd7208\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa4a1d07a7cfa1b461231b81ee9bd7208\">◆&nbsp;<\/a><\/span>SPIDRV_SReceive()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_SReceive <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>callback, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>timeoutMs&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI slave receive transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The MISO wire will transmit <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init#a207c6c1d6fe3547cfa3bcac9deb91c94\" class=\"el\" target=\"_blank\">SPIDRV_Init::dummyTxValue<\/a>.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>callback<\/code><\/td><td>Transfer completion callback.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>timeoutMs<\/code><\/td><td>Transfer timeout in milliseconds.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaacf21de6f56b73897137afe66c8a55fc\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaacf21de6f56b73897137afe66c8a55fc\">◆&nbsp;<\/a><\/span>SPIDRV_SReceiveB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_SReceiveB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>timeoutMs&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI slave blocking receive transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The MISO wire will transmit <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-init#a207c6c1d6fe3547cfa3bcac9deb91c94\" class=\"el\" target=\"_blank\">SPIDRV_Init::dummyTxValue<\/a>. <br>\n This function is blocking and returns when the transfer is complete, on timeout, or when <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> is called.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>timeoutMs<\/code><\/td><td>Transfer timeout in milliseconds.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga5a80e8e9a81e323a5e64eef0a793e0c7\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_TIMEOUT<\/a> on timeout or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga3b0e6cefe8389131f8cda2d3422ca165\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga3b0e6cefe8389131f8cda2d3422ca165\">◆&nbsp;<\/a><\/span>SPIDRV_STransfer()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_STransfer <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>txBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>rxBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>callback, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>timeoutMs&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI slave transfer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>txBuffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>rxBuffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>callback<\/code><\/td><td>Transfer completion callback.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>timeoutMs<\/code><\/td><td>Transfer timeout in milliseconds.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga2117731649ff7375202f3db7c7eaea14\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga2117731649ff7375202f3db7c7eaea14\">◆&nbsp;<\/a><\/span>SPIDRV_STransferB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_STransferB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>txBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>rxBuffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>timeoutMs&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI slave blocking transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd><br>\n This function is blocking and returns when the transfer is complete, on timeout, or when <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> is called.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>txBuffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>rxBuffer<\/code><\/td><td>Receive data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>timeoutMs<\/code><\/td><td>Transfer timeout in milliseconds.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga5a80e8e9a81e323a5e64eef0a793e0c7\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_TIMEOUT<\/a> on timeout or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gab17e267c072c9fa5424ac0dbb6d162b4\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gab17e267c072c9fa5424ac0dbb6d162b4\">◆&nbsp;<\/a><\/span>SPIDRV_STransmit()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_STransmit <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\"><a href=\"#ga350f047a931c290e22c6626e05185f30\" class=\"el\">SPIDRV_Callback_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>callback, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>timeoutMs&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI slave transmit transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The data received on the MOSI wire is discarded.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>callback<\/code><\/td><td>Transfer completion callback.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>timeoutMs<\/code><\/td><td>Transfer timeout in milliseconds.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga950e481559e49f805c4c65701f272df5\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga950e481559e49f805c4c65701f272df5\">◆&nbsp;<\/a><\/span>SPIDRV_STransmitB()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> SPIDRV_STransmitB <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const void *&nbsp;<\/td>\n          <td class=\"paramname\"><code>buffer, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>count, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>timeoutMs&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Start an SPI slave blocking transmit transfer. <\/p>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The data received on the MOSI wire is discarded. <br>\n This function is blocking and returns when the transfer is complete, on timeout, or when <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> is called.<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to an SPI driver handle.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>buffer<\/code><\/td><td>Transmit data buffer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>count<\/code><\/td><td>Number of bytes in transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>timeoutMs<\/code><\/td><td>Transfer timeout in milliseconds.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga5a80e8e9a81e323a5e64eef0a793e0c7\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_TIMEOUT<\/a> on timeout or <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga6fa497c90552cd4a5a171df85a4cc2ff\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_ABORTED<\/a> if <a href=\"#ga071d128b28b8acff08396fb090b8025a\" class=\"el\">SPIDRV_AbortTransfer()<\/a> has been called. On failure, an appropriate SPIDRV <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> is returned. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<h2 class=\"groupheader\">Typedef Documentation<\/h2>\n<a id=\"ga350f047a931c290e22c6626e05185f30\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga350f047a931c290e22c6626e05185f30\">◆&nbsp;<\/a><\/span>SPIDRV_Callback_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">typedef void(* SPIDRV_Callback_t) (struct <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/struct-s-p-i-d-r-v-handle-data\" class=\"el\" target=\"_blank\">SPIDRV_HandleData<\/a> *handle, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-ecode#ga7bf5621660c5ba69ac4dd3044173d35c\" class=\"el\" target=\"_blank\">Ecode_t<\/a> transferStatus, int itemsTransferred)<\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>SPIDRV transfer completion callback function. <\/p>\n<p>Called when a transfer is complete. An application should check the transferStatus and itemsTransferred values.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>The SPIDRV device handle used to start the transfer.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>transferStatus<\/code><\/td><td>A number of bytes actually transferred.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>itemsTransferred<\/code><\/td><td>A number of bytes transferred.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga38b85d953fb373f09638bcf7c44d0967\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_OK<\/a> on success, <a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv-error-codes#ga5a80e8e9a81e323a5e64eef0a793e0c7\" class=\"el\" target=\"_blank\">ECODE_EMDRV_SPIDRV_TIMEOUT<\/a> on timeout. Timeouts are only relevant for slave mode transfers. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa2b4d4c1c192566db0b9080a5c06eb60\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\">◆&nbsp;<\/a><\/span>SPIDRV_Handle_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">typedef SPIDRV_HandleData_t* <a href=\"#gaa2b4d4c1c192566db0b9080a5c06eb60\" class=\"el\">SPIDRV_Handle_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>An SPI driver instance handle. <\/p>\n\n<\/div>\n<\/div>\n<h2 class=\"groupheader\">Enumeration Type Documentation<\/h2>\n<a id=\"ga92f8a1bb98455a277eb9238eb020c9e2\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga92f8a1bb98455a277eb9238eb020c9e2\">◆&nbsp;<\/a><\/span>SPIDRV_Type_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">enum <a href=\"#ga92f8a1bb98455a277eb9238eb020c9e2\" class=\"el\">SPIDRV_Type_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>SPI driver instance type. <\/p>\n<table class=\"fieldtable\">\n<tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\"><a id=\"gga92f8a1bb98455a277eb9238eb020c9e2af6a83e2d1d37a22bc9ba51fd82639ca1\"><\/a>spidrvMaster&nbsp;<\/td><td class=\"fielddoc\"><p>Act as an SPI master. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga92f8a1bb98455a277eb9238eb020c9e2a95838f0a3dc0a41cd9f8666007153382\"><\/a>spidrvSlave&nbsp;<\/td><td class=\"fielddoc\"><p>Act as an SPI slave. <\/p>\n<\/td><\/tr>\n<\/tbody><\/table>\n\n<\/div>\n<\/div>\n<a id=\"ga2571cd18e87ebb5f73c7807f2dc481d6\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga2571cd18e87ebb5f73c7807f2dc481d6\">◆&nbsp;<\/a><\/span>SPIDRV_BitOrder_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">enum <a href=\"#ga2571cd18e87ebb5f73c7807f2dc481d6\" class=\"el\">SPIDRV_BitOrder_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>SPI bus bit order. <\/p>\n<table class=\"fieldtable\">\n<tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\"><a id=\"gga2571cd18e87ebb5f73c7807f2dc481d6ad5e81b8d0ea9e47ce1b0e8e07d7fefcb\"><\/a>spidrvBitOrderLsbFirst&nbsp;<\/td><td class=\"fielddoc\"><p>LSB bit is transmitted first. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga2571cd18e87ebb5f73c7807f2dc481d6a39e35dc40973c0bd86a3bf5773e62ee0\"><\/a>spidrvBitOrderMsbFirst&nbsp;<\/td><td class=\"fielddoc\"><p>MSB bit is transmitted first. <\/p>\n<\/td><\/tr>\n<\/tbody><\/table>\n\n<\/div>\n<\/div>\n<a id=\"ga13720525a175ccbac25d23f36389c5e7\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga13720525a175ccbac25d23f36389c5e7\">◆&nbsp;<\/a><\/span>SPIDRV_ClockMode_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">enum <a href=\"#ga13720525a175ccbac25d23f36389c5e7\" class=\"el\">SPIDRV_ClockMode_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>SPI clock mode (clock polarity and phase). <\/p>\n<table class=\"fieldtable\">\n<tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\"><a id=\"gga13720525a175ccbac25d23f36389c5e7a27310f7f1b98461cf85ba709cd0fe41a\"><\/a>spidrvClockMode0&nbsp;<\/td><td class=\"fielddoc\"><p>SPI mode 0: CLKPOL=0, CLKPHA=0. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga13720525a175ccbac25d23f36389c5e7ab6543e2ed572e0f6355e400e3180cd72\"><\/a>spidrvClockMode1&nbsp;<\/td><td class=\"fielddoc\"><p>SPI mode 1: CLKPOL=0, CLKPHA=1. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga13720525a175ccbac25d23f36389c5e7a8703b40ce81f04a02bd6d373d614629d\"><\/a>spidrvClockMode2&nbsp;<\/td><td class=\"fielddoc\"><p>SPI mode 2: CLKPOL=1, CLKPHA=0. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga13720525a175ccbac25d23f36389c5e7a645525db817610d91a47d87068c3bcf9\"><\/a>spidrvClockMode3&nbsp;<\/td><td class=\"fielddoc\"><p>SPI mode 3: CLKPOL=1, CLKPHA=1. <\/p>\n<\/td><\/tr>\n<\/tbody><\/table>\n\n<\/div>\n<\/div>\n<a id=\"ga1b2445b05fd2c5a499068e7cd6642380\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga1b2445b05fd2c5a499068e7cd6642380\">◆&nbsp;<\/a><\/span>SPIDRV_CsControl_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">enum <a href=\"#ga1b2445b05fd2c5a499068e7cd6642380\" class=\"el\">SPIDRV_CsControl_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>SPI master chip select (CS) control scheme. <\/p>\n<table class=\"fieldtable\">\n<tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\"><a id=\"gga1b2445b05fd2c5a499068e7cd6642380a904c7b0aced12d590e14d068c9b3f7a1\"><\/a>spidrvCsControlAuto&nbsp;<\/td><td class=\"fielddoc\"><p>CS controlled by the SPI driver. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga1b2445b05fd2c5a499068e7cd6642380a287d46881f1c2a94361a865fe75d9fa0\"><\/a>spidrvCsControlApplication&nbsp;<\/td><td class=\"fielddoc\"><p>CS controlled by the application. <\/p>\n<\/td><\/tr>\n<\/tbody><\/table>\n\n<\/div>\n<\/div>\n<a id=\"ga5886a33d407438f827ca1b47a8bb6be0\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga5886a33d407438f827ca1b47a8bb6be0\">◆&nbsp;<\/a><\/span>SPIDRV_SlaveStart_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">enum <a href=\"#ga5886a33d407438f827ca1b47a8bb6be0\" class=\"el\">SPIDRV_SlaveStart_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>SPI slave transfer start scheme. <\/p>\n<table class=\"fieldtable\">\n<tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\"><a id=\"gga5886a33d407438f827ca1b47a8bb6be0a5cd731dca4929ff3ec6ad62006b7bca8\"><\/a>spidrvSlaveStartImmediate&nbsp;<\/td><td class=\"fielddoc\"><p>Transfer starts immediately. <\/p>\n<\/td><\/tr>\n<tr><td class=\"fieldname\"><a id=\"gga5886a33d407438f827ca1b47a8bb6be0ad616a0af127eb0682af8f60e9954289a\"><\/a>spidrvSlaveStartDelayed&nbsp;<\/td><td class=\"fielddoc\"><p>Transfer starts when the bus is idle (CS deasserted). <\/p>\n<\/td><\/tr>\n<\/tbody><\/table>\n\n<\/div>\n<\/div>\n<\/div>\n      <div ub-in-page=\"6062051aebaf71079a7b414b\"><\/div>\n      <\/article>\n    ","url":"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-spidrv","status":"success"}
